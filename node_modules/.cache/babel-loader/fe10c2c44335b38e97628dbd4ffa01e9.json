{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nihil/workspace/code-sharing/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nihil/workspace/code-sharing/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      codes: []\n    };\n\n    _this.handleChange = function (e) {\n      var change = {};\n      change[e.target.name] = e.target.value;\n\n      _this.setState(change);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var submitData =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(code) {\n          var url, data, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  url = 'http://127.0.0.1:3000/api/all';\n                  _context.next = 4;\n                  return fetch(url, {\n                    method: 'GET',\n                    // or 'PUT'\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  });\n\n                case 4:\n                  data = _context.sent;\n                  _context.next = 7;\n                  return data.json();\n\n                case 7:\n                  response = _context.sent;\n\n                  _this2.setState({\n                    codes: response\n                  });\n\n                  console.log(response);\n                  _context.next = 15;\n                  break;\n\n                case 12:\n                  _context.prev = 12;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.log(_context.t0);\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 12]]);\n        }));\n\n        return function submitData(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      submitData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Welcome to code sharing!\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nihil/workspace/code-sharing/client/src/App.js"],"names":["React","Component","App","state","codes","handleChange","e","change","target","name","value","setState","submitData","code","url","fetch","method","headers","data","json","response","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAN,GAAwBH,CAAC,CAACE,MAAF,CAASE,KAAjC;;AACA,YAAKC,QAAL,CAAcJ,MAAd;AACD,K;;;;;;;wCAEmB;AAAA;;AAClB,UAAMK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,kBAAAA,GAFS,GAEH,+BAFG;AAAA;AAAA,yBAGIC,KAAK,CAACD,GAAD,EAAM;AAC5BE,oBAAAA,MAAM,EAAE,KADoB;AACb;AACfC,oBAAAA,OAAO,EAAE;AACP,sCAAgB;AADT;AAFmB,mBAAN,CAHT;;AAAA;AAGTC,kBAAAA,IAHS;AAAA;AAAA,yBAUQA,IAAI,CAACC,IAAL,EAVR;;AAAA;AAUTC,kBAAAA,QAVS;;AAWf,kBAAA,MAAI,CAACT,QAAL,CAAc;AAAEP,oBAAAA,KAAK,EAAEgB;AAAT,mBAAd;;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAZe;AAAA;;AAAA;AAAA;AAAA;AAcfC,kBAAAA,OAAO,CAACC,GAAR;;AAde;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAVV,UAAU;AAAA;AAAA;AAAA,SAAhB;;AAkBAA,MAAAA,UAAU;AACX;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF;AAKD;;;;EAtCeX,S;;AAyClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    codes: []\n  };\n\n  handleChange = e => {\n    let change = {};\n    change[e.target.name] = e.target.value;\n    this.setState(change);\n  };\n\n  componentDidMount() {\n    const submitData = async code => {\n      try {\n        const url = 'http://127.0.0.1:3000/api/all';\n        const data = await fetch(url, {\n          method: 'GET', // or 'PUT'\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const response = await data.json();\n        this.setState({ codes: response });\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    submitData();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Welcome to code sharing!</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}